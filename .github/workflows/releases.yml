#The name of your workflow.
name:  Deploy tagged build
# Trigger the workflow on tag created
on:
  create:
    tags:
      - '*'
#A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:
  build_id:
    runs-on: macos-latest
    steps:
      - name: 'Set build id'
        id: build_id
        # add a step output `steps.build_id.outputs.id` as the unique id
        run: echo "::set-output name=id::$(date +%s)"
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          # store the build id to github cache
          path: ${{ github.workspace }}/.build-id
          # use the build id to generate a completly unique cache
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}
      - name: 'Save build id'
        # store the build id to a folder that we can later cache.
        run: |
          mkdir -p .build-id 
          echo $BUILD_ID > .build-id/id
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
  test:
    #The type of machine to run the job on. [windows,macos, ubuntu , self-hosted]
    runs-on: macos-latest
    #sequence of tasks called
    steps:
      # The branch or tag ref that triggered the workflow will be checked out.
      # https://github.com/actions/checkout
      - uses: actions/checkout@v1
      # Setup a flutter environment.
      # https://github.com/marketplace/actions/flutter-action
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - run: flutter pub get
      # run static analys code
      - run: flutter  analyze
      # run  flutter widgets tests  and unit tests
      - name: Force coverage on all dart files in lib
        run: .github/scripts/fix_coverage.sh monica
      - run: flutter test --coverage
      # Upload coverage reports to Codecov
      # https://github.com/marketplace/actions/codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_SECRET }}
          file: coverage/lcov.info

  build_android_release:
    #if conditional to prevent a job from r
    runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run.
    needs: [build_id,test]
    name: Build appbundle
    steps:
      - uses: actions/checkout@v1
      # restore the build id
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
      # set the build id from the restored cache
      - name: 'Set build id'
        id: build_id
        run: echo "::set-output name=id::$(cat .build-id/id)"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      # This action sets up a java environment
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - run: flutter pub get
      # build Android version
      - name: Decrypt signing key and firebase config
        run: ./.github/scripts/decrypt_secret_android.sh
        env:
          ANDROID_DEPLOY_KEY_SECRET_PASSPHRASE: ${{ secrets.ANDROID_DEPLOY_KEY_SECRET_PASSPHRASE }}
          KEY_PROPERTIES_SECRET_PASSPHRASE: ${{ secrets.KEY_PROPERTIES_SECRET_PASSPHRASE }}
          GOOGLE_PLAY_SERVICE_ACCOUNT_SECRET_PASSPHRASE: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_SECRET_PASSPHRASE }}
          ANDROID_GOOGLE_JSON_ENCRYPTION_SECRET: ${{ secrets.ANDROID_GOOGLE_JSON_ENCRYPTION_SECRET }}
      - name: Move decrypted files to their correct locations
        run: |
          mv $HOME/secrets/key.jks $GITHUB_WORKSPACE/android/app/key.jks
          mv $HOME/secrets/key.properties $GITHUB_WORKSPACE/android/key.properties
          mv $HOME/secrets/google-play-service.json $GITHUB_WORKSPACE/android/google-play-service.json
          mv $HOME/secrets/google-services.json $GITHUB_WORKSPACE/android/app/google-services.json
      - name: Build Android app
        run: flutter build appbundle --release --target-platform android-arm,android-arm64,android-x64 --build-number=`cat .build-id/id`
      - name: Archive android app bundle
        uses: actions/upload-artifact@v1
        with:
          name: santa-release.aab
          path: build/app/outputs/bundle/release/app-release.aab
  deploy_android_appbundle:
    needs: [build_android_release]
    runs-on: macos-latest
    name: Deploy Android to Play Store
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: santa-release.aab
          path: build/app/outputs/bundle/release/app-release.aab
      - name: Decrypt signing key and firebase config
        run: ./.github/scripts/decrypt_secret_android.sh
        env:
          ANDROID_DEPLOY_KEY_SECRET_PASSPHRASE: ${{ secrets.ANDROID_DEPLOY_KEY_SECRET_PASSPHRASE }}
          KEY_PROPERTIES_SECRET_PASSPHRASE: ${{ secrets.KEY_PROPERTIES_SECRET_PASSPHRASE }}
          GOOGLE_PLAY_SERVICE_ACCOUNT_SECRET_PASSPHRASE: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_SECRET_PASSPHRASE }}
          ANDROID_GOOGLE_JSON_ENCRYPTION_SECRET: ${{ secrets.ANDROID_GOOGLE_JSON_ENCRYPTION_SECRET }}
      - name: Move decrypted files to their correct locations
        run: |
          mv $HOME/secrets/google-play-service.json $GITHUB_WORKSPACE/android/google-play-service.json
      - name: Fastlane Deploy Android Internal
        uses: maierj/fastlane-action@v1.2.0
        with:
          # The lane that should be executed.
          lane: internal
          # The relative path from the project root directory to the subdirectory where the fastlane folder is located.
          subdirectory: android
          # The action tracks usage in Firebase by default. You can disable tracking by setting this parameter to 'true'.
          skip-tracking: true
  build_ios_release:
    #if conditional to prevent a job from r
    runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run.
    needs: [build_id,test]
    name: Build and deploy ipa
    steps:
      - uses: actions/checkout@v1
      # restore the build id
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
      # set the build id from the restored cache
      - name: 'Set build id'
        id: build_id
        run: echo "::set-output name=id::$(cat .build-id/id)"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - run: flutter pub get
      # setup encrypted files
      - name: Decrypt  firebase config
        run: ./.github/scripts/decrypt_secret_ios.sh
        env:
          IOS_GOOGLE_PLIST_ENCRYPTION_SECRET: ${{ secrets.IOS_GOOGLE_PLIST_ENCRYPTION_SECRET }}
      - name: Move decrypted files to their correct locations
        run: |
          mv $HOME/secrets/GoogleService-Info.plist $GITHUB_WORKSPACE/ios/Runner/GoogleService-Info.plist
      # build iOS version
      - name: Build Unsigned iOS App
        run: flutter build ios --release --no-codesign --build-number=`cat .build-id/id`
      - name: Sign iOS App
        uses: maierj/fastlane-action@v1.2.0
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTH }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        with:
          # The lane that should be executed.
          lane: build
          # The relative path from the project root directory to the subdirectory where the fastlane folder is located.
          subdirectory: ios
          # The action tracks usage in Firebase by default. You can disable tracking by setting this parameter to 'true'.
          skip-tracking: true
        - name: Archive iOS app
        uses: actions/upload-artifact@v1
        with:
          name: santa-release-signed.ipa
          path: build/ios/Runner.ipa
  deploy_ios_to_testflight:
    needs: [build_ios_release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: santa-release-signed.ipa
          path: build/ios/Runner.ipa
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - run: flutter pub get
      - name: Fastlane Deploy iOS Testflight
        uses: maierj/fastlane-action@v1.2.0
        env:
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        with:
          # The lane that should be executed.
          lane: beta
          # The relative path from the project root directory to the subdirectory where the fastlane folder is located.
          subdirectory: ios
          # The action tracks usage in Firebase by default. You can disable tracking by setting this parameter to 'true'.
          skip-tracking: true